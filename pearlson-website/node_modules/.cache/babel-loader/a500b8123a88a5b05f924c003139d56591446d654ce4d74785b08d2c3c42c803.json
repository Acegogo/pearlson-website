{"ast":null,"code":"import _objectSpread from\"C:/Users/ELITEBOOK/pearlson-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={theme:'light',language:'en',isMenuOpen:false,notifications:[],user:null,loading:false,error:null};// Action types\nconst ActionTypes={SET_THEME:'SET_THEME',SET_LANGUAGE:'SET_LANGUAGE',TOGGLE_MENU:'TOGGLE_MENU',ADD_NOTIFICATION:'ADD_NOTIFICATION',REMOVE_NOTIFICATION:'REMOVE_NOTIFICATION',SET_USER:'SET_USER',SET_LOADING:'SET_LOADING',SET_ERROR:'SET_ERROR'};// Reducer\nconst reducer=(state,action)=>{switch(action.type){case ActionTypes.SET_THEME:return _objectSpread(_objectSpread({},state),{},{theme:action.payload});case ActionTypes.SET_LANGUAGE:return _objectSpread(_objectSpread({},state),{},{language:action.payload});case ActionTypes.TOGGLE_MENU:return _objectSpread(_objectSpread({},state),{},{isMenuOpen:!state.isMenuOpen});case ActionTypes.ADD_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{notifications:[...state.notifications,action.payload]});case ActionTypes.REMOVE_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{notifications:state.notifications.filter(notification=>notification.id!==action.payload)});case ActionTypes.SET_USER:return _objectSpread(_objectSpread({},state),{},{user:action.payload});case ActionTypes.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case ActionTypes.SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};// Create context\nconst AppContext=/*#__PURE__*/createContext();// Provider component\nexport const AppProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(reducer,initialState);// Load theme from localStorage on mount\nuseEffect(()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme){dispatch({type:ActionTypes.SET_THEME,payload:savedTheme});}},[]);// Save theme to localStorage when it changes\nuseEffect(()=>{localStorage.setItem('theme',state.theme);document.documentElement.classList.remove('light','dark');document.documentElement.classList.add(state.theme);},[state.theme]);// Actions\nconst actions={setTheme:theme=>{dispatch({type:ActionTypes.SET_THEME,payload:theme});},setLanguage:language=>{dispatch({type:ActionTypes.SET_LANGUAGE,payload:language});},toggleMenu:()=>{dispatch({type:ActionTypes.TOGGLE_MENU});},addNotification:notification=>{const id=Date.now();dispatch({type:ActionTypes.ADD_NOTIFICATION,payload:_objectSpread(_objectSpread({},notification),{},{id})});// Auto remove notification after 5 seconds\nsetTimeout(()=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:id});},5000);},removeNotification:id=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:id});},setUser:user=>{dispatch({type:ActionTypes.SET_USER,payload:user});},setLoading:loading=>{dispatch({type:ActionTypes.SET_LOADING,payload:loading});},setError:error=>{dispatch({type:ActionTypes.SET_ERROR,payload:error});}};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,actions},children:children});};// Custom hook for using the context\nexport const useApp=()=>{const context=useContext(AppContext);if(!context){throw new Error('useApp must be used within an AppProvider');}return context;};export default AppContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","initialState","theme","language","isMenuOpen","notifications","user","loading","error","ActionTypes","SET_THEME","SET_LANGUAGE","TOGGLE_MENU","ADD_NOTIFICATION","REMOVE_NOTIFICATION","SET_USER","SET_LOADING","SET_ERROR","reducer","state","action","type","_objectSpread","payload","filter","notification","id","AppContext","AppProvider","_ref","children","dispatch","savedTheme","localStorage","getItem","setItem","document","documentElement","classList","remove","add","actions","setTheme","setLanguage","toggleMenu","addNotification","Date","now","setTimeout","removeNotification","setUser","setLoading","setError","Provider","value","useApp","context","Error"],"sources":["C:/Users/ELITEBOOK/pearlson-website/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  theme: 'light',\r\n  language: 'en',\r\n  isMenuOpen: false,\r\n  notifications: [],\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Action types\r\nconst ActionTypes = {\r\n  SET_THEME: 'SET_THEME',\r\n  SET_LANGUAGE: 'SET_LANGUAGE',\r\n  TOGGLE_MENU: 'TOGGLE_MENU',\r\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\r\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\r\n  SET_USER: 'SET_USER',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n};\r\n\r\n// Reducer\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n      };\r\n    case ActionTypes.SET_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.payload,\r\n      };\r\n    case ActionTypes.TOGGLE_MENU:\r\n      return {\r\n        ...state,\r\n        isMenuOpen: !state.isMenuOpen,\r\n      };\r\n    case ActionTypes.ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload],\r\n      };\r\n    case ActionTypes.REMOVE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          (notification) => notification.id !== action.payload\r\n        ),\r\n      };\r\n    case ActionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case ActionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case ActionTypes.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AppContext = createContext();\r\n\r\n// Provider component\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Load theme from localStorage on mount\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      dispatch({ type: ActionTypes.SET_THEME, payload: savedTheme });\r\n    }\r\n  }, []);\r\n\r\n  // Save theme to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', state.theme);\r\n    document.documentElement.classList.remove('light', 'dark');\r\n    document.documentElement.classList.add(state.theme);\r\n  }, [state.theme]);\r\n\r\n  // Actions\r\n  const actions = {\r\n    setTheme: (theme) => {\r\n      dispatch({ type: ActionTypes.SET_THEME, payload: theme });\r\n    },\r\n    setLanguage: (language) => {\r\n      dispatch({ type: ActionTypes.SET_LANGUAGE, payload: language });\r\n    },\r\n    toggleMenu: () => {\r\n      dispatch({ type: ActionTypes.TOGGLE_MENU });\r\n    },\r\n    addNotification: (notification) => {\r\n      const id = Date.now();\r\n      dispatch({\r\n        type: ActionTypes.ADD_NOTIFICATION,\r\n        payload: { ...notification, id },\r\n      });\r\n      // Auto remove notification after 5 seconds\r\n      setTimeout(() => {\r\n        dispatch({ type: ActionTypes.REMOVE_NOTIFICATION, payload: id });\r\n      }, 5000);\r\n    },\r\n    removeNotification: (id) => {\r\n      dispatch({ type: ActionTypes.REMOVE_NOTIFICATION, payload: id });\r\n    },\r\n    setUser: (user) => {\r\n      dispatch({ type: ActionTypes.SET_USER, payload: user });\r\n    },\r\n    setLoading: (loading) => {\r\n      dispatch({ type: ActionTypes.SET_LOADING, payload: loading });\r\n    },\r\n    setError: (error) => {\r\n      dispatch({ type: ActionTypes.SET_ERROR, payload: error });\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, actions }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using the context\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AppContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}